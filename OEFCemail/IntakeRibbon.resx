<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="group1.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toggleButtonIntakeDisplay.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vvf/SakDLBxvCpYAAAAASUVORK5CYII=
</value>
  </data>
</root>